<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>絢爛霓虹燈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mxo.mobi.com/"/>
  <updated>2020-01-04T03:53:53.390Z</updated>
  <id>http://mxo.mobi.com/</id>
  
  <author>
    <name>非也</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python+pyqt5编写爬虫界面（界面与处理逻辑分离）</title>
    <link href="http://mxo.mobi.com/2021/03/08/python%E7%BC%96%E5%86%99%E7%88%AC%E8%99%AB%EF%BC%8Cpyqt5%E7%95%8C%E9%9D%A2%E5%B1%95%E7%A4%BA/"/>
    <id>http://mxo.mobi.com/2021/03/08/python编写爬虫，pyqt5界面展示/</id>
    <published>2021-03-08T12:27:14.259Z</published>
    <updated>2020-01-04T03:53:53.390Z</updated>
    
    <content type="html"><![CDATA[<p>这段时间比较空闲，对爬虫比较感兴趣，所以用pyqt5作为爬虫数据的展示界面，以下为我学习过后的代码整理</p><h3 id="界面设计工具-Qt-Designer"><a href="#界面设计工具-Qt-Designer" class="headerlink" title="界面设计工具 Qt Designer"></a>界面设计工具 Qt Designer</h3><p>该工具下载，请自行百度，使用方法：拖拽控件设计界面，修改控件名称等，不再赘述</p><p><img src="/images/Hexobuild/pyqt-1.png" alt></p><h3 id="安装python-运行依赖"><a href="#安装python-运行依赖" class="headerlink" title="安装python 运行依赖"></a>安装python 运行依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyqt5   #qt界面必须引入</span><br><span class="line">pip install pyinstaller   #应用打包生成exe</span><br></pre></td></tr></table></figure><h3 id="ui文件转换py文件"><a href="#ui文件转换py文件" class="headerlink" title="ui文件转换py文件"></a>ui文件转换py文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyuic5 -o &lt;生成py文件名&gt; &lt;原ui文件名&gt;</span><br></pre></td></tr></table></figure><h3 id="几个py文件说明"><a href="#几个py文件说明" class="headerlink" title="几个py文件说明"></a>几个py文件说明</h3><ul><li><p>main.py   # 主启动程序类</p></li><li><p>view.py   # ui生成的界面编写类</p></li><li><p>thread.py  # 线程类</p></li><li><p>code.py   #爬虫逻辑类</p></li></ul><h4 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a>main.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QMainWindow, QMessageBox, QTableWidgetItem, QApplication</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, pyqtSlot</span><br><span class="line"><span class="keyword">from</span> view <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"><span class="keyword">from</span> thread <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span><span class="params">(QMainWindow, Ui_MainWindow)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        super(MainWindow, self).__init__(parent)</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self._page = <span class="number">1</span></span><br><span class="line">        self._key = <span class="string">""</span></span><br><span class="line">        self.list_ = []</span><br><span class="line">        self.search_btn.clicked.connect(self.search_click)</span><br><span class="line">        self.search_input.returnPressed.connect(<span class="keyword">lambda</span>: self.search_click)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @pyqtSlot()</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_click</span><span class="params">(self)</span>:</span></span><br><span class="line">        _key = self.search_input.text()</span><br><span class="line">        <span class="keyword">if</span> _key == <span class="string">''</span>:</span><br><span class="line">            <span class="keyword">return</span> QMessageBox.warning(self, <span class="string">'提示'</span>, <span class="string">'请输入关键词'</span>)</span><br><span class="line">        self.to_search()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_search</span><span class="params">(self, page_num=<span class="number">1</span>)</span>:</span></span><br><span class="line">        key_word = self.search_input.text()</span><br><span class="line">        self.list_.clear()</span><br><span class="line">        self.table_widget.clear()</span><br><span class="line">        self.table_widget.setRowCount(<span class="number">0</span>)</span><br><span class="line">        self.table_widget.setColumnCount(<span class="number">0</span>)</span><br><span class="line">        self.search_thread = FirstThread(self, key_word, page_num)</span><br><span class="line">        self.search_thread.search_signal.connect(self.return_list_first)  <span class="comment"># 连接信号</span></span><br><span class="line">        self.search_thread.start()  <span class="comment"># 开始线程</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">return_list_first</span><span class="params">(self, _list)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(_list) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> QMessageBox.warning(self, <span class="string">'提示'</span>, <span class="string">'搜索结果为空'</span>)</span><br><span class="line">        <span class="comment"># 必须加self</span></span><br><span class="line">        self.thread_1 = UrlThread(self, _list)</span><br><span class="line">        self.thread_1.url_signal.connect(self.return_list_second)  <span class="comment"># 连接信号</span></span><br><span class="line">        self.thread_1.start()  <span class="comment"># 开始线程</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">return_list_second</span><span class="params">(self, _item)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(_item) &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> QMessageBox.warning(self, <span class="string">'提示'</span>, <span class="string">'搜索结果为空'</span>)</span><br><span class="line">        self.list_.append(_item)</span><br><span class="line">        list_col = [<span class="string">'title'</span>, <span class="string">'time'</span>, <span class="string">'url'</span>]</span><br><span class="line">        _col = len(list_col)</span><br><span class="line">        _table = self.table_widget</span><br><span class="line">        row_count = _table.rowCount()</span><br><span class="line">        _table.setRowCount(row_count)  <span class="comment"># 设置行数</span></span><br><span class="line">        _table.setColumnCount(_col)  <span class="comment"># 设置列数</span></span><br><span class="line">        _table.setHorizontalHeaderLabels([<span class="string">'标题'</span>, <span class="string">'发布时间'</span>, <span class="string">'操作'</span>])</span><br><span class="line">        _table.insertRow(row_count)</span><br><span class="line">        _table.setItem(row_count, <span class="number">0</span>, QTableWidgetItem(_item[<span class="string">'title'</span>]))</span><br><span class="line">        _table.setItem(row_count, <span class="number">1</span>, QTableWidgetItem(_item[<span class="string">'time'</span>]))</span><br><span class="line">        url_btn = QTableWidgetItem(<span class="string">"下载"</span>)</span><br><span class="line">        url_btn.setTextAlignment(Qt.AlignCenter)</span><br><span class="line">        _table.setItem(row_count, <span class="number">2</span>, url_btn)</span><br><span class="line">        _table.setColumnWidth(<span class="number">0</span>, <span class="number">400</span>)</span><br><span class="line">        _table.setColumnWidth(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">        self.table_widget = _table</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    ui = MainWindow()</span><br><span class="line">    ui.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h4 id="thread-py"><a href="#thread-py" class="headerlink" title="thread.py"></a>thread.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QThread, pyqtSignal</span><br><span class="line"><span class="keyword">from</span> code_sd <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬取分页信息</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstThread</span><span class="params">(QThread)</span>:</span></span><br><span class="line">    search_signal = pyqtSignal(list)    <span class="comment"># 括号里填写信号传递的参数</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, _obj, _key, _page)</span>:</span></span><br><span class="line">        self._key = _key</span><br><span class="line">        self._page = _page</span><br><span class="line">        super().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.wait()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 进行任务操作</span></span><br><span class="line">        text = search_url_list(_key=self._key, _page=self._page)</span><br><span class="line">        self.search_signal.emit(text)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 爬取详情页        </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlThread</span><span class="params">(QThread)</span>:</span></span><br><span class="line">    url_signal = pyqtSignal(dict)    <span class="comment"># 括号里填写信号传递的参数</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, _obj, _url)</span>:</span></span><br><span class="line">        self._url = _url</span><br><span class="line">        super().__init__()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.wait()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 进行任务操作</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self._url:</span><br><span class="line">            text = search_detail(str(i))</span><br><span class="line">            self.url_signal.emit(text)</span><br></pre></td></tr></table></figure><h4 id="code-py"><a href="#code-py" class="headerlink" title="code.py"></a>code.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36'</span>&#125;</span><br><span class="line">search_url = <span class="string">"http://www.mtx.cn/viewcontent/bglist_&#123;0&#125;.htm?orderby=26"</span></span><br><span class="line">index_path = <span class="string">"http://www.mtx.cn"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.获取研究报告详情</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_detail</span><span class="params">(s, url)</span>:</span></span><br><span class="line">    html = s.get(index_path+url, headers=headers)</span><br><span class="line">    bs = etree.HTML(html.text)</span><br><span class="line">    title = bs.xpath(<span class="string">'//div[@class="yl-AllConL"]//div[@class="yl-matterTit"]/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">    time = bs.xpath(<span class="string">'//div[@class="yl-AllConL"]//div[@class="yl-matterBq"]/span/text()'</span>)[<span class="number">3</span>].split( )[<span class="number">0</span>]</span><br><span class="line">    title = title.replace(<span class="string">"/"</span>, <span class="string">"-"</span>)</span><br><span class="line">    _url = <span class="string">""</span></span><br><span class="line">    <span class="comment"># print("正在获取研究报告：" + title + "时间：" + str(time) + "链接：" + _url)</span></span><br><span class="line">    report = dict(title=title, time=time, url=_url)</span><br><span class="line">    <span class="keyword">return</span> report</span><br><span class="line">    <span class="comment"># down_file(s, _url, save_path, title)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建路径</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_file</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="comment"># 创建路径路径</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        <span class="comment"># 创建路径</span></span><br><span class="line">        os.makedirs(path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1获取分页详情url[]</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_url_list</span><span class="params">(_key, _page)</span>:</span></span><br><span class="line">    url = <span class="string">"http://www.mtx.cn/pcm/search_"</span>+str(_page)+<span class="string">".jspx?channelid=63&amp;query="</span>+parse.quote(str(_key))</span><br><span class="line">    <span class="comment"># print("正在解析页码："+url)</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    html = s.get(url, headers=headers)</span><br><span class="line">    bs = etree.HTML(html.text)</span><br><span class="line">    design = bs.xpath(<span class="string">'//div[@class="w1200 yl-AllCon searchpage"]//div[@class="yl-AllConL"]//ul[@class="yl-ZxList demo0427"]//li/a/@href'</span>)</span><br><span class="line">    <span class="keyword">return</span> design</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2根据详情url获取信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_detail</span><span class="params">(_url)</span>:</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    _report = get_detail(s, _url)</span><br><span class="line">    <span class="keyword">return</span> _report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建会话</span></span><br><span class="line">    s = requests.Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="view-py"><a href="#view-py" class="headerlink" title="view.py"></a>view.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Form implementation generated from reading ui file 'view.ui'</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Created by: PyQt5 UI code generator 5.14.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># WARNING! All changes made in this file will be lost!</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtCore, QtGui, QtWidgets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_MainWindow</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setupUi</span><span class="params">(self, MainWindow)</span>:</span></span><br><span class="line">        MainWindow.setObjectName(<span class="string">"MainWindow"</span>)</span><br><span class="line">        MainWindow.setFixedSize(MainWindow.width(), MainWindow.height())</span><br><span class="line">        MainWindow.resize(<span class="number">671</span>, <span class="number">463</span>)</span><br><span class="line">        MainWindow.setWindowIcon(QtGui.QIcon(<span class="string">':/search.ico'</span>))</span><br><span class="line">        self.centralwidget = QtWidgets.QWidget(MainWindow)</span><br><span class="line">        self.centralwidget.setObjectName(<span class="string">"centralwidget"</span>)</span><br><span class="line">        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)</span><br><span class="line">        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(<span class="number">20</span>, <span class="number">0</span>, <span class="number">631</span>, <span class="number">51</span>))</span><br><span class="line">        self.horizontalLayoutWidget.setObjectName(<span class="string">"horizontalLayoutWidget"</span>)</span><br><span class="line">        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)</span><br><span class="line">        self.horizontalLayout.setContentsMargins(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        self.horizontalLayout.setObjectName(<span class="string">"horizontalLayout"</span>)</span><br><span class="line">        self.search_input = QtWidgets.QLineEdit(self.horizontalLayoutWidget)</span><br><span class="line">        self.search_input.setObjectName(<span class="string">"search_input"</span>)</span><br><span class="line">        self.horizontalLayout.addWidget(self.search_input)</span><br><span class="line">        self.search_btn = QtWidgets.QPushButton(self.horizontalLayoutWidget)</span><br><span class="line">        self.search_btn.setObjectName(<span class="string">"search_btn"</span>)</span><br><span class="line">        self.horizontalLayout.addWidget(self.search_btn)</span><br><span class="line">        self.table_widget = QtWidgets.QTableWidget(self.centralwidget)</span><br><span class="line">        self.table_widget.setGeometry(QtCore.QRect(<span class="number">20</span>, <span class="number">50</span>, <span class="number">631</span>, <span class="number">341</span>))</span><br><span class="line">        self.table_widget.setObjectName(<span class="string">"table_widget"</span>)</span><br><span class="line">        self.table_widget.setColumnCount(<span class="number">0</span>)</span><br><span class="line">        self.table_widget.setRowCount(<span class="number">0</span>)</span><br><span class="line">        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)</span><br><span class="line">        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(<span class="number">180</span>, <span class="number">390</span>, <span class="number">211</span>, <span class="number">41</span>))</span><br><span class="line">        self.horizontalLayoutWidget_2.setObjectName(<span class="string">"horizontalLayoutWidget_2"</span>)</span><br><span class="line">        MainWindow.setCentralWidget(self.centralwidget)</span><br><span class="line">        self.menubar = QtWidgets.QMenuBar(MainWindow)</span><br><span class="line">        self.menubar.setGeometry(QtCore.QRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">671</span>, <span class="number">23</span>))</span><br><span class="line">        self.menubar.setObjectName(<span class="string">"menubar"</span>)</span><br><span class="line">        MainWindow.setMenuBar(self.menubar)</span><br><span class="line">        self.statusbar = QtWidgets.QStatusBar(MainWindow)</span><br><span class="line">        self.statusbar.setObjectName(<span class="string">"statusbar"</span>)</span><br><span class="line">        MainWindow.setStatusBar(self.statusbar)</span><br><span class="line"></span><br><span class="line">        self.retranslateUi(MainWindow)</span><br><span class="line">        QtCore.QMetaObject.connectSlotsByName(MainWindow)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retranslateUi</span><span class="params">(self, MainWindow)</span>:</span></span><br><span class="line">        _translate = QtCore.QCoreApplication.translate</span><br><span class="line">        MainWindow.setWindowTitle(_translate(<span class="string">"MainWindow"</span>, <span class="string">"MainWindow"</span>))</span><br><span class="line">        self.search_btn.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"搜索"</span>))</span><br></pre></td></tr></table></figure><h3 id="界面展示"><a href="#界面展示" class="headerlink" title="界面展示"></a>界面展示</h3><p><img src="/images/Hexobuild/pyqt-2.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这段时间比较空闲，对爬虫比较感兴趣，所以用pyqt5作为爬虫数据的展示界面，以下为我学习过后的代码整理&lt;/p&gt;
&lt;h3 id=&quot;界面设计工具-Qt-Designer&quot;&gt;&lt;a href=&quot;#界面设计工具-Qt-Designer&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="爬虫初级" scheme="http://mxo.mobi.com/categories/%E7%88%AC%E8%99%AB%E5%88%9D%E7%BA%A7/"/>
    
    
      <category term="python" scheme="http://mxo.mobi.com/tags/python/"/>
    
      <category term="pyqt5" scheme="http://mxo.mobi.com/tags/pyqt5/"/>
    
      <category term="爬虫" scheme="http://mxo.mobi.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Oracle使用过程中涉及到的命令</title>
    <link href="http://mxo.mobi.com/2021/03/08/Oracle%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://mxo.mobi.com/2021/03/08/Oracle常用命令/</id>
    <published>2021-03-08T12:27:14.257Z</published>
    <updated>2020-07-20T07:27:59.263Z</updated>
    
    <content type="html"><![CDATA[<p>Oracle使用过程中涉及到的命令，在此记录  </p><h3 id="权限相关命令"><a href="#权限相关命令" class="headerlink" title="权限相关命令"></a>权限相关命令</h3><ol><li><p>创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="keyword">test</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="keyword">test</span>;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>用户授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">session</span>, <span class="keyword">connect</span>, <span class="keyword">resource</span> <span class="keyword">to</span> <span class="keyword">test</span>;</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>授权存储过程给目标用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> s_user.exchange <span class="keyword">to</span> t_user;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>授权表给目标用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">update</span>,<span class="keyword">insert</span> <span class="keyword">on</span> DM_ZLYYPT.ADM_ROL_USR_REL  <span class="keyword">to</span> DM_ZLYYPT <span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>;</span><br></pre></td></tr></table></figure><p>提示</p><p>with grant option ：意思是: 用于对象授权时,被授予的用户也可把此对象权限授予其他用户或角色</p></li></ol><h3 id="新建自增表"><a href="#新建自增表" class="headerlink" title="新建自增表"></a>新建自增表</h3><ol><li><p>新建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> DM_ZLYYPT.TEST_TABKE(</span><br><span class="line"><span class="keyword">ID</span> <span class="built_in">number</span>(<span class="number">19</span>,<span class="number">0</span>) primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">NAME</span>  VARCHAR2(<span class="number">255</span> <span class="built_in">CHAR</span>),</span><br><span class="line">REMARK  VARCHAR2(<span class="number">255</span> <span class="built_in">CHAR</span>) ,</span><br><span class="line">CREATE_TIME <span class="built_in">DATE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>新建序列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SEQUENCE</span> DM_ZLYYPT.TEST_TABLE_sequence</span><br><span class="line"><span class="keyword">INCREMENT</span> <span class="keyword">BY</span> <span class="number">1</span>   <span class="comment">-- 每次加几个</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1</span>     <span class="comment">-- 从1开始计数</span></span><br><span class="line"><span class="keyword">NOMAXVALUE</span>        <span class="comment">-- 不设置最大值</span></span><br><span class="line"><span class="keyword">NOCYCLE</span>               <span class="comment">-- 一直累加，不循环</span></span><br><span class="line">NOCACHE               <span class="comment">-- 不建缓冲区</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>新建触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> DM_ZLYYPT.TEST_TABLE_trig <span class="keyword">before</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">on</span> DM_ZLYYPT.TEST_TABKE <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span> <span class="keyword">when</span> (new.ID <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">         <span class="keyword">select</span> DM_ZLYYPT.TEST_TABLE_sequence.nextval <span class="keyword">into</span>:new.ID <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Oracle使用过程中涉及到的命令，在此记录  &lt;/p&gt;
&lt;h3 id=&quot;权限相关命令&quot;&gt;&lt;a href=&quot;#权限相关命令&quot; class=&quot;headerlink&quot; title=&quot;权限相关命令&quot;&gt;&lt;/a&gt;权限相关命令&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建用户&lt;/p&gt;
&lt;fig
      
    
    </summary>
    
      <category term="Oracle" scheme="http://mxo.mobi.com/categories/Oracle/"/>
    
    
      <category term="数据库" scheme="http://mxo.mobi.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Oracle" scheme="http://mxo.mobi.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Hexo静态博客框架搭建</title>
    <link href="http://mxo.mobi.com/2021/03/08/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>http://mxo.mobi.com/2021/03/08/Hexo静态博客框架搭建/</id>
    <published>2021-03-08T12:27:14.256Z</published>
    <updated>2019-04-11T12:20:21.928Z</updated>
    
    <content type="html"><![CDATA[<p>记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。  </p><h3 id="nodeJs与git依赖环境搭建"><a href="#nodeJs与git依赖环境搭建" class="headerlink" title="nodeJs与git依赖环境搭建"></a>nodeJs与git依赖环境搭建</h3><p>1.访问nodeJs官网，下载对应的版本：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>  </p><p><img src="/images/Hexobuild/nodejs-1.png" alt>  </p><p>2.安装完成后，配置环境变量，定位到nodeJs安装根目录</p><p><img src="/images/Hexobuild/nodejs-2.png" alt>  </p><p>3.验证是否安装成功,成功出现nodeJs版本号，安装成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/nodejs-3.png" alt>  </p><p>4.访问git官网，下载最新的git安装版本：<a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">https://www.git-scm.com/download/</a>  </p><p><img src="/images/Hexobuild/git-1.png" alt>  </p><p>5.安装完毕后，查看版本号  ,出现版本号为安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><h3 id="Hexo框架搭建与配置"><a href="#Hexo框架搭建与配置" class="headerlink" title="Hexo框架搭建与配置"></a>Hexo框架搭建与配置</h3><p>注意：以下步骤必须完成以上nodeJs和git环境安装后，才可进行</p><p>1.使用npm命令安装hexo  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>2.使用命令验证版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --version</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/hexo-1.png" alt>  </p><p>3.安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>安装完之后，生成以下文件结构：  </p><p><img src="/images/Hexobuild/hexo-2.png" alt>  </p><p>4.cd 进入hexo新建目录，启动Hexo  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/hexo-3.png" alt>  </p><h3 id="Hexo-NexT主题下载与配置"><a href="#Hexo-NexT主题下载与配置" class="headerlink" title="Hexo NexT主题下载与配置"></a>Hexo NexT主题下载与配置</h3><p>1.通过github下载主题  <folder>为建站根目录</folder></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>2.下载完成后，修改主题配置文件（\themes\next_config.yaml）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line"># scheme: Gemini</span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>3.修改主题默认语言，编辑hexo根目录下的_config.yaml文件,zh-Hans为中文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><h3 id="Hexo部署到github"><a href="#Hexo部署到github" class="headerlink" title="Hexo部署到github"></a>Hexo部署到github</h3><p>1.新建仓库,创建名称为：username.github.io (username为你的账号名称) </p><p><img src="/images/Hexobuild/git-2.png" alt>  </p><p><img src="/images/Hexobuild/git-3.png" alt>  </p><p>2.本地生成SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"username"</span></span><br><span class="line">$ git config --global user.email <span class="string">"youremail"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail"</span> <span class="comment">#一路回车</span></span><br></pre></td></tr></table></figure><p>3.复制SSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>4.添加ssh到github</p><p><img src="/images/Hexobuild/git-4.png" alt>  </p><p><img src="/images/Hexobuild/git-5.png" alt>  </p><p><img src="/images/Hexobuild/git-6.png" alt>  </p><p>5.在gitbash中，查看是否成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>6.先安装deploy-git 部署的命令,这样你才能用命令部署到GitHub</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>7.修改Hexo配置_config.yaml，修改为新建的仓库ssh地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>8.部署到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>9.访问 feirty.github.io  即可看到网站</p><h3 id="github-io绑定域名-访问"><a href="#github-io绑定域名-访问" class="headerlink" title="github.io绑定域名 访问"></a>github.io绑定域名 访问</h3><p>1.添加域名解析  </p><p><img src="/images/Hexobuild/ip-1.png" alt>  </p><p>2.获取github的ip</p><p><img src="/images/Hexobuild/ip-2.png" alt>  </p><p>3.博客文件source中创建一个名为CNAME文件,添加域名，无需前缀  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mxo.mobi</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/github-1.png" alt></p><p><img src="/images/Hexobuild/github-2.png" alt>  </p><p>4.重新部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>5.最后尝试用域名访问成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。  &lt;/p&gt;
&lt;h3 id=&quot;nodeJs与git依赖环境搭建&quot;&gt;&lt;a href=&quot;#nodeJs与git依赖环境搭建&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="搭建博客" scheme="http://mxo.mobi.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="npm" scheme="http://mxo.mobi.com/tags/npm/"/>
    
      <category term="hexo" scheme="http://mxo.mobi.com/tags/hexo/"/>
    
      <category term="github" scheme="http://mxo.mobi.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Centos Linux下搭建Asp.Net环境</title>
    <link href="http://mxo.mobi.com/2021/03/08/Centos-Linux%E4%B8%8B%E6%90%AD%E5%BB%BAAsp.Net%E7%8E%AF%E5%A2%83/"/>
    <id>http://mxo.mobi.com/2021/03/08/Centos-Linux下搭建Asp.Net环境/</id>
    <published>2021-03-08T12:27:14.254Z</published>
    <updated>2019-05-10T09:53:10.375Z</updated>
    
    <content type="html"><![CDATA[<p>记录在linux部署Asp.Net运行环境，使用 Mono + Jexus 部署，Mono是linux运行asp.net必须的编译环境，Jexus是国人开发的反向代理服务器，功能类似Nginx,但是Jexus更加强大，支持Asp.Net运行。   </p><p>Jexus官网地址：<a href="https://www.jexus.org/" target="_blank" rel="noopener">https://www.jexus.org/</a>  </p><h3 id="传统Mono-Jexus安装方法（较繁琐不推荐）"><a href="#传统Mono-Jexus安装方法（较繁琐不推荐）" class="headerlink" title="传统Mono+Jexus安装方法（较繁琐不推荐）"></a>传统Mono+Jexus安装方法（较繁琐不推荐）</h3><p>Jexus通用版不带 .NET运行时，因此，使用者应该首先在客户机安装mono和libgdiplus。  </p><p>在Ubuntu上安装Mono，可参见 <a href="https://www.linuxdot.net/bbsfile-3090" target="_blank" rel="noopener">在Ubuntu操作系统上安装mono的具体方法</a><br>在CentOS上安装Mono，可参见 <a href="http://www.cnblogs.com/shanyou/archive/2012/01/07/2315982.html" target="_blank" rel="noopener">张善友先生写的CentOS Mono安装教程</a>  </p><p>安装jexus通用版的命令是：<br>curl <a href="https://jexus.org/release/install|sudo" target="_blank" rel="noopener">https://jexus.org/release/install|sudo</a> sh  </p><p>注：运行安装命令，需要操作者有root权限。  </p><h3 id="安装Jexus独立版（集成了Mono）"><a href="#安装Jexus独立版（集成了Mono）" class="headerlink" title="安装Jexus独立版（集成了Mono）"></a>安装Jexus独立版（集成了Mono）</h3><p>1.安装命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://jexus.org/release/x64/install.sh|sudo sh</span><br></pre></td></tr></table></figure><p>2.安装成功后，自动生成安装目录：/usr/jexus/</p><p>3.运行Jexus命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/jexus/</span><br><span class="line">$ ./jws start</span><br></pre></td></tr></table></figure><p>4.网页访问（默认配置文件/usr/jexus/siteconf/default,默认端口80，默认访问目录/var/www/default）  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ http://localhost:80/info</span><br></pre></td></tr></table></figure><p><img src="/images/Jexus/jexus-1.png" alt> </p><p>看到以上页面说明安装成功</p><p>4.新建默认的项目路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /var/www/default</span><br></pre></td></tr></table></figure><p>将项目文件复制到 /var/www/default目录下</p><p>5.自定义配置  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/jexus/siteconf/default</span><br></pre></td></tr></table></figure><p><img src="/images/Jexus/jexus-2.png" alt> </p><p>核心配置  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">port=80</span><br><span class="line">root=/ /var/www/default #默认访问目录，可自定义</span><br></pre></td></tr></table></figure><p>6.常用命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./jws start</span><br><span class="line">$ ./jws restart</span><br><span class="line">$ ./jws stop</span><br></pre></td></tr></table></figure><h3 id="安装成功后遇到的问题解答"><a href="#安装成功后遇到的问题解答" class="headerlink" title="安装成功后遇到的问题解答"></a>安装成功后遇到的问题解答</h3><p>1.System.IO.IOException   </p><p>详细错误代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System.IO.IOException</span><br><span class="line">The configured user limit (128) on the number of inotify instances has been reached.</span><br><span class="line">Description: HTTP 500.Error processing request.</span><br><span class="line"></span><br><span class="line">Details: Non-web exception. Exception origin (name of application or object): System.</span><br><span class="line"></span><br><span class="line">Exception stack trace:</span><br><span class="line">  at System.IO.CoreFX.FileSystemWatcher.StartRaisingEvents () [0x0007b] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at System.IO.CoreFX.FileSystemWatcher.StartRaisingEventsIfNotDisposed () [0x00019] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at System.IO.CoreFX.FileSystemWatcher.set_EnableRaisingEvents (System.Boolean value) [0x0001d] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at (wrapper remoting-invoke-with-check) System.IO.CoreFX.FileSystemWatcher.set_EnableRaisingEvents(bool)</span><br><span class="line">  at System.IO.CoreFXFileSystemWatcherProxy+&lt;&gt;c.&lt;StartDispatching&gt;b__9_0 (System.IO.CoreFX.FileSystemWatcher internal_fsw, System.IO.FileSystemWatcher fsw) [0x00048] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at System.IO.CoreFXFileSystemWatcherProxy.Operation (System.Action`4[T1,T2,T3,T4] map_op, System.Action`2[T1,T2] object_op, System.Object handle, System.Action`2[T1,T2] cancel_op) [0x00184] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0</span><br></pre></td></tr></table></figure><p>解决方案:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/sysctl.conf</span><br><span class="line">$ 在文件末尾新添加一句：fs.inotify.max_user_instances=1024</span><br><span class="line">$ ./sbin/sysctl -p  #使编辑内容生效</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录在linux部署Asp.Net运行环境，使用 Mono + Jexus 部署，Mono是linux运行asp.net必须的编译环境，Jexus是国人开发的反向代理服务器，功能类似Nginx,但是Jexus更加强大，支持Asp.Net运行。   &lt;/p&gt;
&lt;p&gt;Jexus
      
    
    </summary>
    
      <category term="C#" scheme="http://mxo.mobi.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://mxo.mobi.com/tags/C/"/>
    
      <category term="ASP.NET" scheme="http://mxo.mobi.com/tags/ASP-NET/"/>
    
  </entry>
  
</feed>
