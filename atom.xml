<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>絢爛霓虹燈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mxo.mobi.com/"/>
  <updated>2019-05-10T09:53:10.375Z</updated>
  <id>http://mxo.mobi.com/</id>
  
  <author>
    <name>非也</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos Linux下搭建Asp.Net环境</title>
    <link href="http://mxo.mobi.com/2019/05/10/Centos-Linux%E4%B8%8B%E6%90%AD%E5%BB%BAAsp.Net%E7%8E%AF%E5%A2%83/"/>
    <id>http://mxo.mobi.com/2019/05/10/Centos-Linux下搭建Asp.Net环境/</id>
    <published>2019-05-10T09:53:10.179Z</published>
    <updated>2019-05-10T09:53:10.375Z</updated>
    
    <content type="html"><![CDATA[<p>记录在linux部署Asp.Net运行环境，使用 Mono + Jexus 部署，Mono是linux运行asp.net必须的编译环境，Jexus是国人开发的反向代理服务器，功能类似Nginx,但是Jexus更加强大，支持Asp.Net运行。   </p><p>Jexus官网地址：<a href="https://www.jexus.org/" target="_blank" rel="noopener">https://www.jexus.org/</a>  </p><h3 id="传统Mono-Jexus安装方法（较繁琐不推荐）"><a href="#传统Mono-Jexus安装方法（较繁琐不推荐）" class="headerlink" title="传统Mono+Jexus安装方法（较繁琐不推荐）"></a>传统Mono+Jexus安装方法（较繁琐不推荐）</h3><p>Jexus通用版不带 .NET运行时，因此，使用者应该首先在客户机安装mono和libgdiplus。  </p><p>在Ubuntu上安装Mono，可参见 <a href="https://www.linuxdot.net/bbsfile-3090" target="_blank" rel="noopener">在Ubuntu操作系统上安装mono的具体方法</a><br>在CentOS上安装Mono，可参见 <a href="http://www.cnblogs.com/shanyou/archive/2012/01/07/2315982.html" target="_blank" rel="noopener">张善友先生写的CentOS Mono安装教程</a>  </p><p>安装jexus通用版的命令是：<br>curl <a href="https://jexus.org/release/install|sudo" target="_blank" rel="noopener">https://jexus.org/release/install|sudo</a> sh  </p><p>注：运行安装命令，需要操作者有root权限。  </p><h3 id="安装Jexus独立版（集成了Mono）"><a href="#安装Jexus独立版（集成了Mono）" class="headerlink" title="安装Jexus独立版（集成了Mono）"></a>安装Jexus独立版（集成了Mono）</h3><p>1.安装命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://jexus.org/release/x64/install.sh|sudo sh</span><br></pre></td></tr></table></figure><p>2.安装成功后，自动生成安装目录：/usr/jexus/</p><p>3.运行Jexus命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/jexus/</span><br><span class="line">$ ./jws start</span><br></pre></td></tr></table></figure><p>4.网页访问（默认配置文件/usr/jexus/siteconf/default,默认端口80，默认访问目录/var/www/default）  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ http://localhost:80/info</span><br></pre></td></tr></table></figure><p><img src="/images/Jexus/jexus-1.png" alt> </p><p>看到以上页面说明安装成功</p><p>4.新建默认的项目路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /var/www/default</span><br></pre></td></tr></table></figure><p>将项目文件复制到 /var/www/default目录下</p><p>5.自定义配置  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/jexus/siteconf/default</span><br></pre></td></tr></table></figure><p><img src="/images/Jexus/jexus-2.png" alt> </p><p>核心配置  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">port=80</span><br><span class="line">root=/ /var/www/default #默认访问目录，可自定义</span><br></pre></td></tr></table></figure><p>6.常用命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./jws start</span><br><span class="line">$ ./jws restart</span><br><span class="line">$ ./jws stop</span><br></pre></td></tr></table></figure><h3 id="安装成功后遇到的问题解答"><a href="#安装成功后遇到的问题解答" class="headerlink" title="安装成功后遇到的问题解答"></a>安装成功后遇到的问题解答</h3><p>1.System.IO.IOException   </p><p>详细错误代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System.IO.IOException</span><br><span class="line">The configured user limit (128) on the number of inotify instances has been reached.</span><br><span class="line">Description: HTTP 500.Error processing request.</span><br><span class="line"></span><br><span class="line">Details: Non-web exception. Exception origin (name of application or object): System.</span><br><span class="line"></span><br><span class="line">Exception stack trace:</span><br><span class="line">  at System.IO.CoreFX.FileSystemWatcher.StartRaisingEvents () [0x0007b] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at System.IO.CoreFX.FileSystemWatcher.StartRaisingEventsIfNotDisposed () [0x00019] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at System.IO.CoreFX.FileSystemWatcher.set_EnableRaisingEvents (System.Boolean value) [0x0001d] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at (wrapper remoting-invoke-with-check) System.IO.CoreFX.FileSystemWatcher.set_EnableRaisingEvents(bool)</span><br><span class="line">  at System.IO.CoreFXFileSystemWatcherProxy+&lt;&gt;c.&lt;StartDispatching&gt;b__9_0 (System.IO.CoreFX.FileSystemWatcher internal_fsw, System.IO.FileSystemWatcher fsw) [0x00048] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0 </span><br><span class="line">  at System.IO.CoreFXFileSystemWatcherProxy.Operation (System.Action`4[T1,T2,T3,T4] map_op, System.Action`2[T1,T2] object_op, System.Object handle, System.Action`2[T1,T2] cancel_op) [0x00184] in &lt;e35dfeba7ed248b1a1d7afe3381392f9&gt;:0</span><br></pre></td></tr></table></figure><p>解决方案:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/sysctl.conf</span><br><span class="line">$ 在文件末尾新添加一句：fs.inotify.max_user_instances=1024</span><br><span class="line">$ ./sbin/sysctl -p  #使编辑内容生效</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录在linux部署Asp.Net运行环境，使用 Mono + Jexus 部署，Mono是linux运行asp.net必须的编译环境，Jexus是国人开发的反向代理服务器，功能类似Nginx,但是Jexus更加强大，支持Asp.Net运行。   &lt;/p&gt;
&lt;p&gt;Jexus
      
    
    </summary>
    
      <category term="C#" scheme="http://mxo.mobi.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://mxo.mobi.com/tags/C/"/>
    
      <category term="ASP.NET" scheme="http://mxo.mobi.com/tags/ASP-NET/"/>
    
  </entry>
  
  <entry>
    <title>Hexo静态博客框架搭建</title>
    <link href="http://mxo.mobi.com/2019/04/11/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>http://mxo.mobi.com/2019/04/11/Hexo静态博客框架搭建/</id>
    <published>2019-04-11T04:00:15.743Z</published>
    <updated>2019-04-11T12:20:21.928Z</updated>
    
    <content type="html"><![CDATA[<p>记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。  </p><h3 id="nodeJs与git依赖环境搭建"><a href="#nodeJs与git依赖环境搭建" class="headerlink" title="nodeJs与git依赖环境搭建"></a>nodeJs与git依赖环境搭建</h3><p>1.访问nodeJs官网，下载对应的版本：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>  </p><p><img src="/images/Hexobuild/nodejs-1.png" alt>  </p><p>2.安装完成后，配置环境变量，定位到nodeJs安装根目录</p><p><img src="/images/Hexobuild/nodejs-2.png" alt>  </p><p>3.验证是否安装成功,成功出现nodeJs版本号，安装成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/nodejs-3.png" alt>  </p><p>4.访问git官网，下载最新的git安装版本：<a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">https://www.git-scm.com/download/</a>  </p><p><img src="/images/Hexobuild/git-1.png" alt>  </p><p>5.安装完毕后，查看版本号  ,出现版本号为安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><h3 id="Hexo框架搭建与配置"><a href="#Hexo框架搭建与配置" class="headerlink" title="Hexo框架搭建与配置"></a>Hexo框架搭建与配置</h3><p>注意：以下步骤必须完成以上nodeJs和git环境安装后，才可进行</p><p>1.使用npm命令安装hexo  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>2.使用命令验证版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --version</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/hexo-1.png" alt>  </p><p>3.安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>安装完之后，生成以下文件结构：  </p><p><img src="/images/Hexobuild/hexo-2.png" alt>  </p><p>4.cd 进入hexo新建目录，启动Hexo  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/hexo-3.png" alt>  </p><h3 id="Hexo-NexT主题下载与配置"><a href="#Hexo-NexT主题下载与配置" class="headerlink" title="Hexo NexT主题下载与配置"></a>Hexo NexT主题下载与配置</h3><p>1.通过github下载主题  <folder>为建站根目录</folder></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>2.下载完成后，修改主题配置文件（\themes\next_config.yaml）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line"># scheme: Gemini</span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>3.修改主题默认语言，编辑hexo根目录下的_config.yaml文件,zh-Hans为中文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><h3 id="Hexo部署到github"><a href="#Hexo部署到github" class="headerlink" title="Hexo部署到github"></a>Hexo部署到github</h3><p>1.新建仓库,创建名称为：username.github.io (username为你的账号名称) </p><p><img src="/images/Hexobuild/git-2.png" alt>  </p><p><img src="/images/Hexobuild/git-3.png" alt>  </p><p>2.本地生成SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"username"</span></span><br><span class="line">$ git config --global user.email <span class="string">"youremail"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail"</span> <span class="comment">#一路回车</span></span><br></pre></td></tr></table></figure><p>3.复制SSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>4.添加ssh到github</p><p><img src="/images/Hexobuild/git-4.png" alt>  </p><p><img src="/images/Hexobuild/git-5.png" alt>  </p><p><img src="/images/Hexobuild/git-6.png" alt>  </p><p>5.在gitbash中，查看是否成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>6.先安装deploy-git 部署的命令,这样你才能用命令部署到GitHub</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>7.修改Hexo配置_config.yaml，修改为新建的仓库ssh地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>8.部署到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>9.访问 feirty.github.io  即可看到网站</p><h3 id="github-io绑定域名-访问"><a href="#github-io绑定域名-访问" class="headerlink" title="github.io绑定域名 访问"></a>github.io绑定域名 访问</h3><p>1.添加域名解析  </p><p><img src="/images/Hexobuild/ip-1.png" alt>  </p><p>2.获取github的ip</p><p><img src="/images/Hexobuild/ip-2.png" alt>  </p><p>3.博客文件source中创建一个名为CNAME文件,添加域名，无需前缀  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mxo.mobi</span><br></pre></td></tr></table></figure><p><img src="/images/Hexobuild/github-1.png" alt></p><p><img src="/images/Hexobuild/github-2.png" alt>  </p><p>4.重新部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>5.最后尝试用域名访问成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。记录本人Hexo博客搭建过程，作为开启Hexo博客的第一篇博文。  &lt;/p&gt;
&lt;h3 id=&quot;nodeJs与git依赖环境搭建&quot;&gt;&lt;a href=&quot;#nodeJs与git依赖环境搭建&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="搭建博客" scheme="http://mxo.mobi.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="npm" scheme="http://mxo.mobi.com/tags/npm/"/>
    
      <category term="hexo" scheme="http://mxo.mobi.com/tags/hexo/"/>
    
      <category term="github" scheme="http://mxo.mobi.com/tags/github/"/>
    
  </entry>
  
</feed>
